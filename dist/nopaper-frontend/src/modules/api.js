import axios from"axios";const baseURL=process.env.API_URL||"http://localhost:8000/",api=axios.create({baseURL:baseURL});async function get(e){try{const t=sessionStorage.getItem("token");return(await api.get(e,{headers:{"x-access-token":t},cache:!1})).data}catch(e){return Promise.reject(e)}}async function post(e,t){try{const o=sessionStorage.getItem("token");return(await api.post(e,t,{headers:{"x-access-token":o},crossdomain:!0})).data}catch(e){return e.response&&400===e.response.status?Promise.reject({error:e,message:e.response.data.message}):Promise.reject(e)}}async function patch(e,t){try{const o=sessionStorage.getItem("token");return(await api.patch(e,t,{headers:{"x-access-token":o}})).data}catch(e){return Promise.reject(e)}}async function del(e){try{const t=sessionStorage.getItem("token");return(await api.delete(e,{headers:{"x-access-token":t}})).data}catch(e){return Promise.reject(e)}}async function login(e,t){try{return await post("/login",{email:e,pwd:t})}catch(e){throw console.log(e),new Error(e)}}async function register(e,t,o){try{const r=await post("/register",{email:t,nome:e,pwd:o});console.log(r)}catch(e){throw new Error(e.message||"Erro")}}async function getUserNotebooks(){try{return await get("/notebook")}catch(e){throw new Error(e.message||"Erro")}}async function createNewNotebook(e,t=""){try{await post("/notebook/new",{name:e,description:t})}catch(e){throw new Error(e.message||"Erro")}}export default{login:login,register:register,getUserNotebooks:getUserNotebooks,createNewNotebook:createNewNotebook};